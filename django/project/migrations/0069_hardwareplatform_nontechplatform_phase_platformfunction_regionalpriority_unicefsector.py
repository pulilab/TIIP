# Generated by Django 2.1 on 2020-09-01 15:35

from django.db import migrations, models
import django.db.models.manager
import project.cache


class Migration(migrations.Migration):

    dependencies = [
        ('project', '0068_projectimportv2_country_office'),
    ]

    operations = [
        migrations.CreateModel(
            name='HardwarePlatform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=512)),
            ],
            options={
                'verbose_name_plural': 'Hardware Platform(s) and Physical Product(s)',
                'ordering': ['name'],
                'abstract': False,
            },
            bases=(project.cache.InvalidateCacheMixin, models.Model),
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='NontechPlatform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=512)),
            ],
            options={
                'verbose_name_plural': 'Programme Innovation(s) and Non-Technology Platform(s)',
                'ordering': ['name'],
                'abstract': False,
            },
            bases=(project.cache.InvalidateCacheMixin, models.Model),
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Phase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=512)),
            ],
            options={
                'verbose_name_plural': 'Phase of Initiative',
                'ordering': ['name'],
                'abstract': False,
            },
            bases=(project.cache.InvalidateCacheMixin, models.Model),
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='PlatformFunction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=512)),
            ],
            options={
                'verbose_name_plural': 'Function(s) of Platform',
                'ordering': ['name'],
                'abstract': False,
            },
            bases=(project.cache.InvalidateCacheMixin, models.Model),
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='RegionalPriority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=512)),
            ],
            options={
                'verbose_name_plural': 'Regional Priorities',
                'ordering': ['name'],
                'abstract': False,
            },
            bases=(project.cache.InvalidateCacheMixin, models.Model),
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='UNICEFSector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=512)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
            bases=(project.cache.InvalidateCacheMixin, models.Model),
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
    ]
